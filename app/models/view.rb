class View < ApplicationRecord
    #ActiveRecord::Base.connection.execute("""SELECT created_at, week_number, max(views) AS views, (case when week_number = '28' then 'week number is 28' else 'wekk number is not 28' end) as mytest, myclipid, ifnull(week_number2,0) as num_semaineder, ifnull(nbvuessemaineder,0), ifnull(count(weektop),0) as nbsem_top, ifnull(myweektop,0) as myweek__top, ifnull(weektop,0) as week__top, ifnull(max(myweekrownum),0) as nb__sem_top, views2 as lastweek, ifnull(classement_semaine_derniere,0), classement_semaine, ifnull(ce_classement_semaine_derniere2,0), clip_id, max(ce_classement_semaine) as pire_position, max(classement_semaine) as ma_pire_position, min(ce_classement_semaine) as mailleure_position, min(classement_semaine) as ma_mailleure_position FROM (SELECT v.id as myid,v.clip_id as myclipid, v.created_at as created_at, strftime('%W', v.created_at) AS week_number, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v.created_at) ORDER BY sum(case when v.id is not null then 1 else 0 end) DESC) AS classement_semaine, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v.created_at) ORDER BY count(v.id) DESC) AS ce_classement_semaine, (case when strftime('%W',v.created_at) = '52' and strftime('%W','now') = '1' or strftime('%W','now') = cast((cast(strftime('%W',v.created_at) as integer) + 1) as string) then ('semderniere') else 'pas de classement' end) as position_la_semaine_derniere, sum(case when v.id is not null then 1 else 0 end) AS views, clip_id, (case when strftime('%W', created_at) = '52' and strftime('%W','now') = '1' or strftime('%W','now') = cast(cast(strftime('%W', created_at) as integer) + 1 as string) and count(v.id) > 0 then count(v.id) else 'pas la semaine derniere' end) as classement_semaine_derniere, (select cat_id from clips at where at.id = v.clip_id limit 1) as catid1 FROM views v group by week_number, clip_id ) t1 on t1.catid1 = #{id} left join (SELECT v1.id as myid2,v1.clip_id as myclipid2,v1.clip_id as clip_id2, v1.created_at as created_at2, strftime('%W', v1.created_at) AS week_number3, (select region from clips az where az.id = v1.clip_id limit 1) as regionid3,ROW_NUMBER() OVER(PARTITION BY strftime('%W', v1.created_at) ORDER BY count(v1.id) DESC) AS ce_classement_cette_semaine, strftime('%W',v1.created_at) as weektop, count(strftime('%W',v1.created_at)) as myweektop, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v1.created_at) order by cast(strftime('%W',v1.created_at) as integer)) as myweekrownum, sum(case when v1.id is not null then 1 else 0 end) AS views3, clip_id as clip_id3 FROM views v1 GROUP BY clip_id3,week_number3 ) t3 on t3.clip_id3 = t1.clip_id and t3.regionid3 = #{id} and t3.ce_classement_cette_semaine < 16 left join (SELECT v1.id as myid2,v1.clip_id as myclipid2,v1.clip_id as clip_id2, v1.created_at as created_at2, strftime('%W', v1.created_at) AS week_number2, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v1.created_at) ORDER BY count(v1.id) DESC) AS ce_classement_semaine_derniere2, (select count(a.id) as mycount from views a where strftime('%W',a.created_at) = strftime('%W',v1.created_at) and a.clip_id = v1.clip_id) as nbvuessemaineder, sum(case when v1.id is not null then 1 else 0 end) AS views2, clip_id as clip_ip2 FROM views v1 GROUP BY clip_id2,week_number2 ) t2 on t2.clip_id2 = t1.clip_id and ((t2.week_number2 = '52' and strftime('%W','now') = '1') or strftime('%W','now') = cast(cast(t2.week_number2 as integer) + 1 as string)) GROUP BY clip_id ORDER BY clip_id ;""")
  belongs_to :clip
  def self.allviews
    ActiveRecord::Base.connection.execute("
                                          SELECT s.* FROM ( 
                                              SELECT 
                                                      strftime('%W', date(p.created_at, 'unixepoch', 'localtime')) AS week_number,
                                                                sum(case when myviews.id is not null then 1 else 0 end) AS views, clip_id
                                                          FROM views myviews
                                                              GROUP BY week_number, clip_id) s
                                                              WHERE NOT EXISTS(SELECT 1 FROM views p
                                                                               WHERE strftime('%W', date(p.created_at, 'unixepoch', 'localtime')) = s.week_number
                                                                                                GROUP BY p.clip_id
                                                                                                                 HAVING SUM(case when myviews.id is not null then 1 else 0 end) > s.views)
                                          ")
  end
  def self.myviews
     week_number="strftime('%W', vvv.created_at)"
todayweek_number="strftime('%W', 'now')"
     my_week_number="strftime('%W', vv.created_at)"
today_week_number="strftime('%W', 'now')"
    ActiveRecord::Base.connection.execute("
SELECT created_at, week_number,
             max(views) AS views,
             (case when week_number = '28' then 'week number is 28' else 'wekk number is not 28' end) as mytest,
             myclipid,
             classement_semaine,
                    clip_id,
                    ce_classement_semaine_derniere2,
                    position_la_semaine_derniere2,
                    max(ce_classement_semaine) as pire_position,
                    max(classement_semaine) as ma_pire_position,
                    min(ce_classement_semaine) as mailleure_position,
                    min(classement_semaine) as ma_mailleure_position
    FROM (SELECT v.id as myid,v.clip_id as myclipid, v.created_at as created_at, strftime('%W', v.created_at) AS week_number,
             ROW_NUMBER() OVER(PARTITION BY  strftime('%W', v.created_at) ORDER BY sum(case when v.id is not null then 1 else 0 end) DESC) AS classement_semaine, 
             ROW_NUMBER() OVER(PARTITION BY  strftime('%W', v.created_at) ORDER BY count(v.id) DESC) AS ce_classement_semaine, 
             (case when strftime('%W',v.created_at) = '52' and strftime('%W','now') = '1' or strftime('%W','now') = cast((cast(strftime('%W',v.created_at) as integer) + 1) as string) then ('semderniere')  else 'pas de classement' end) as position_la_semaine_derniere,

                       sum(case when v.id is not null then 1 else 0 end) AS views,
                                    clip_id
          FROM views v)
                left outer join (SELECT v1.id as myid2,v1.clip_id as myclipid2,v1.clip_id as clip_id2, v1.created_at as created_at2, strftime('%W', v1.created_at) AS week_number2,
             (case when strftime('%W',v1.created_at) = '52' and strftime('%W','now') = '1' or strftime('%W','now') = cast((cast(strftime('%W',v1.created_at) as integer) + 1) as string) then 'semderniere'  else 'pas de classement' end) as position_la_semaine_derniere2,
             ROW_NUMBER() OVER(PARTITION BY  strftime('%W', v1.created_at) ORDER BY count(v1.id) DESC) AS ce_classement_semaine_derniere2, 

                       sum(case when v1.id is not null then 1 else 0 end) AS views2,
                       clip_id as clip_ip2
                                    
          FROM views v1
                GROUP BY week_number2, clip_id2 having v1.clip_id = clip_id 

)
    GROUP BY clip_id
    ORDER BY clip_id  ;")

  end
  def self.mysql
    ActiveRecord::Base.connection.execute("""SELECT title,image,created_at, week_number, max(views) AS views, (case when week_number = '28' then 'week number is 28' else 'wekk number is not 28' end) as mytest, myclipid, ifnull(week_number2,0) as num_semaineder, ifnull(nbvuessemaineder,0), ifnull(count(weektop),0) as nbsem_top, ifnull(myweektop,0) as myweek__top, ifnull(weektop,0) as week__top, ifnull(max(myweekrownum),0) as nb__sem_top, views2 as lastweek, ifnull(classement_semaine_derniere,0), classement_semaine, ifnull(ce_classement_semaine_derniere2,0), clip_id, max(ce_classement_semaine) as pire_position, max(classement_semaine) as ma_pire_position, min(ce_classement_semaine) as mailleure_position, min(classement_semaine) as ma_mailleure_position FROM (SELECT v.id as myid,v.clip_id as myclipid, v.created_at as created_at, strftime('%W', v.created_at) AS week_number, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v.created_at) ORDER BY sum(case when v.id is not null then 1 else 0 end) DESC) AS classement_semaine, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v.created_at) ORDER BY count(v.id) DESC) AS ce_classement_semaine, (case when strftime('%W',v.created_at) = '52' and strftime('%W','now') = '1' or strftime('%W','now') = cast((cast(strftime('%W',v.created_at) as integer) + 1) as string) then ('semderniere') else 'pas de classement' end) as position_la_semaine_derniere, sum(case when v.id is not null then 1 else 0 end) AS views, clip_id, (case when strftime('%W', created_at) = '52' and strftime('%W','now') = '1' or strftime('%W','now') = cast(cast(strftime('%W', created_at) as integer) + 1 as string) and count(v.id) > 0 then count(v.id) else 'pas la semaine derniere' end) as classement_semaine_derniere,(select title from clips gn where gn.id = v.clip_id) title, (select image from clips uh where uh.id = v.clip_id ) image FROM views v group by week_number, clip_id ) t1 left join (SELECT v1.id as myid2,v1.clip_id as myclipid2,v1.clip_id as clip_id2, v1.created_at as created_at2, strftime('%W', v1.created_at) AS week_number3, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v1.created_at) ORDER BY count(v1.id) DESC) AS ce_classement_cette_semaine, strftime('%W',v1.created_at) as weektop, count(strftime('%W',v1.created_at)) as myweektop, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v1.created_at) order by cast(strftime('%W',v1.created_at) as integer)) as myweekrownum, sum(case when v1.id is not null then 1 else 0 end) AS views3, clip_id as clip_id3 FROM views v1 GROUP BY clip_id3,week_number3 ) t3 on t3.clip_id3 = t1.clip_id and t3.ce_classement_cette_semaine < 16 left join (SELECT v1.id as myid2,v1.clip_id as myclipid2,v1.clip_id as clip_id2, v1.created_at as created_at2, strftime('%W', v1.created_at) AS week_number2, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v1.created_at) ORDER BY count(v1.id) DESC) AS ce_classement_semaine_derniere2, (select count(a.id) as mycount from views a where strftime('%W',a.created_at) = strftime('%W',v1.created_at) and a.clip_id = v1.clip_id) as nbvuessemaineder, sum(case when v1.id is not null then 1 else 0 end) AS views2, clip_id as clip_ip2 FROM views v1 GROUP BY clip_id2,week_number2 ) t2 on t2.clip_id2 = t1.clip_id and ((t2.week_number2 = '52' and strftime('%W','now') = '1') or strftime('%W','now') = cast(cast(t2.week_number2 as integer) + 1 as string)) GROUP BY clip_id ORDER BY clip_id ;""")
  end
  def self.mysqlmyid(myid)
    ActiveRecord::Base.connection.execute("""SELECT created_at, week_number, max(views) AS views, (case when week_number = '28' then 'week number is 28' else 'wekk number is not 28' end) as mytest, myclipid, ifnull(week_number2,0) as num_semaineder, ifnull(nbvuessemaineder,0), ifnull(count(weektop),0) as nbsem_top, ifnull(myweektop,0) as myweek__top, ifnull(weektop,0) as week__top, ifnull(max(myweekrownum),0) as nb__sem_top, views2 as lastweek, ifnull(classement_semaine_derniere,0), classement_semaine, ifnull(ce_classement_semaine_derniere2,0), clip_id, max(ce_classement_semaine) as pire_position, max(classement_semaine) as ma_pire_position, min(ce_classement_semaine) as mailleure_position, min(classement_semaine) as ma_mailleure_position FROM (SELECT v.id as myid,v.clip_id as myclipid, v.created_at as created_at, strftime('%W', v.created_at) AS week_number, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v.created_at) ORDER BY sum(case when v.id is not null then 1 else 0 end) DESC) AS classement_semaine, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v.created_at) ORDER BY count(v.id) DESC) AS ce_classement_semaine, (case when strftime('%W',v.created_at) = '52' and strftime('%W','now') = '1' or strftime('%W','now') = cast((cast(strftime('%W',v.created_at) as integer) + 1) as string) then ('semderniere') else 'pas de classement' end) as position_la_semaine_derniere, sum(case when v.id is not null then 1 else 0 end) AS views, clip_id, (case when strftime('%W', created_at) = '52' and strftime('%W','now') = '1' or strftime('%W','now') = cast(cast(strftime('%W', created_at) as integer) + 1 as string) and count(v.id) > 0 then count(v.id) else 'pas la semaine derniere' end) as classement_semaine_derniere FROM views v group by week_number, clip_id ) t1 left join (SELECT v1.id as myid2,v1.clip_id as myclipid2,v1.clip_id as clip_id2, v1.created_at as created_at2, strftime('%W', v1.created_at) AS week_number3, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v1.created_at) ORDER BY count(v1.id) DESC) AS ce_classement_cette_semaine, strftime('%W',v1.created_at) as weektop, count(strftime('%W',v1.created_at)) as myweektop, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v1.created_at) order by cast(strftime('%W',v1.created_at) as integer)) as myweekrownum, sum(case when v1.id is not null then 1 else 0 end) AS views3, clip_id as clip_id3 FROM views v1 GROUP BY clip_id3,week_number3 ) t3 on t3.clip_id3 = t1.clip_id and t3.ce_classement_cette_semaine < 16 left join (SELECT v1.id as myid2,v1.clip_id as myclipid2,v1.clip_id as clip_id2, v1.created_at as created_at2, strftime('%W', v1.created_at) AS week_number2, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v1.created_at) ORDER BY count(v1.id) DESC) AS ce_classement_semaine_derniere2, (select count(a.id) as mycount from views a where strftime('%W',a.created_at) = strftime('%W',v1.created_at) and a.clip_id = v1.clip_id) as nbvuessemaineder, sum(case when v1.id is not null then 1 else 0 end) AS views2, clip_id as clip_ip2 FROM views v1 GROUP BY clip_id2,week_number2 ) t2 on t2.clip_id2 = t1.clip_id and ((t2.week_number2 = '52' and strftime('%W','now') = '1') or strftime('%W','now') = cast(cast(t2.week_number2 as integer) + 1 as string)) GROUP BY clip_id having clip_id = #{myid} ORDER BY clip_id ;""")[0]
  end
  def self.lastweek(a,b)
    p "week | #{a.title} nb view|#{b.title} nb view "
    10.upto(1).each do |x|
      viewa= View.where(["clip_id = ? and created_at > ? and created_at < ?",a.id,x.weeks.ago.monday.beginning_of_day, x.weeks.ago.sunday.end_of_day]).length
      viewb= View.where(["clip_id = ? and created_at > ? and created_at < ?",b.id,x.weeks.ago.monday.beginning_of_day, x.weeks.ago.sunday.end_of_day]).length
      p "#{x} weeks ago | #{viewa} | #{viewb}"
    end
    p "azertyu"
  end
  def self.view_each_week
  p "il faut avoir au moins 2 videos dans la base"
ActiveRecord::Base.connection.execute("""select strftime('%W',v.created_at) as week, (select count(*) from views v1 where strftime('%W',v1.created_at) = strftime('%W',v.created_at) and v1.clip_id=(select id from clips limit 1 offset 0)) as nbvid1,(select count(*) from views v2 where strftime('%W',v2.created_at) = strftime('%W',v.created_at) and v2.clip_id=(select id from clips limit 1 offset 1)) as nbvid2 from views v group by week """)
end
  def self.view_each_week_3vid
  p "il faut avoir au moins 3 videos dans la base"
ActiveRecord::Base.connection.execute("""select strftime('%W',v.created_at) as week, (select count(*) from views v1 where strftime('%W',v1.created_at) = strftime('%W',v.created_at) and v1.clip_id=(select id from clips limit 1 offset 0)) as nbvid1,(select count(*) from views v2 where strftime('%W',v2.created_at) = strftime('%W',v.created_at) and v2.clip_id=(select id from clips limit 1 offset 1)) as nbvid2,(select count(*) from views v3 where strftime('%W',v3.created_at) = strftime('%W',v.created_at) and v3.clip_id=(select id from clips limit 1 offset 2)) as nbvid3 from views v group by week """)


  end
  def self.mysqlbyregion(id)
    ActiveRecord::Base.connection.execute("""SELECT title,image,regionid1,created_at, week_number, max(views) AS views, (case when week_number = '28' then 'week number is 28' else 'wekk number is not 28' end) as mytest, myclipid, ifnull(week_number2,0) as num_semaineder, ifnull(nbvuessemaineder,0), ifnull(count(weektop),0) as nbsem_top, ifnull(myweektop,0) as myweek__top, ifnull(weektop,0) as week__top, ifnull(max(myweekrownum),0) as nb__sem_top, views2 as lastweek, ifnull(classement_semaine_derniere,0), classement_semaine, ifnull(ce_classement_semaine_derniere2,0), clip_id, max(ce_classement_semaine) as pire_position, max(classement_semaine) as ma_pire_position, min(ce_classement_semaine) as mailleure_position, min(classement_semaine) as ma_mailleure_position FROM (SELECT v.id as myid,v.clip_id as myclipid, v.created_at as created_at, strftime('%W', v.created_at) AS week_number, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v.created_at) ORDER BY sum(case when v.id is not null then 1 else 0 end) DESC) AS classement_semaine, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v.created_at) ORDER BY count(v.id) DESC) AS ce_classement_semaine, (case when strftime('%W',v.created_at) = '52' and strftime('%W','now') = '1' or strftime('%W','now') = cast((cast(strftime('%W',v.created_at) as integer) + 1) as string) then ('semderniere') else 'pas de classement' end) as position_la_semaine_derniere, sum(case when v.id is not null then 1 else 0 end) AS views, clip_id, (select region from clips c2 where c2.id = v.clip_id limit 1) as regionid1, (case when strftime('%W', created_at) = '52' and strftime('%W','now') = '1' or strftime('%W','now') = cast(cast(strftime('%W', created_at) as integer) + 1 as string) and count(v.id) > 0 then count(v.id) else 'pas la semaine derniere' end) as classement_semaine_derniere,(select title from clips od where od.id = v.clip_id limit 1) title,(select image from clips tc where tc.id = v.clip_id limit 1) image FROM views v group by week_number, clip_id ) t1 left join (SELECT v1.id as myid2,v1.clip_id as myclipid2,v1.clip_id as clip_id2, v1.created_at as created_at2, strftime('%W', v1.created_at) AS week_number3, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v1.created_at) ORDER BY count(v1.id) DESC) AS ce_classement_cette_semaine, strftime('%W',v1.created_at) as weektop, count(strftime('%W',v1.created_at)) as myweektop, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v1.created_at) order by cast(strftime('%W',v1.created_at) as integer)) as myweekrownum, sum(case when v1.id is not null then 1 else 0 end) AS views3,(select region from clips c3 where c3.id = v1.clip_id limit 1) as regionid3, clip_id as clip_id3 FROM views v1 GROUP BY clip_id3,week_number3 ) t3 on t3.clip_id3 = t1.clip_id and t3.ce_classement_cette_semaine < 16 left join (SELECT v1.id as myid2,v1.clip_id as myclipid2,v1.clip_id as clip_id2, v1.created_at as created_at2, strftime('%W', v1.created_at) AS week_number2, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v1.created_at) ORDER BY count(v1.id) DESC) AS ce_classement_semaine_derniere2, (select count(a.id) as mycount from views a where strftime('%W',a.created_at) = strftime('%W',v1.created_at) and a.clip_id = v1.clip_id) as nbvuessemaineder, sum(case when v1.id is not null then 1 else 0 end) AS views2, clip_id as clip_ip2,(select region from clips vp where vp.id = v1.clip_id limit 1) regionid2 FROM views v1 GROUP BY clip_id2,week_number2 ) t2 on t2.clip_id2 = t1.clip_id and t2.regionid2 = #{id} and ((t2.week_number2 = '52' and strftime('%W','now') = '1') or strftime('%W','now') = cast(cast(t2.week_number2 as integer) + 1 as string)) and t2.regionid2 = #{id} GROUP BY clip_id having regionid1 = #{id} ORDER BY clip_id ;""")
  end
  def self.mysqlbytype(id)
    ActiveRecord::Base.connection.execute("""SELECT title,image,catid1,created_at, week_number, max(views) AS views, (case when week_number = '28' then 'week number is 28' else 'wekk number is not 28' end) as mytest, myclipid, ifnull(week_number2,0) as num_semaineder, ifnull(nbvuessemaineder,0), ifnull(count(weektop),0) as nbsem_top, ifnull(myweektop,0) as myweek__top, ifnull(weektop,0) as week__top, ifnull(max(myweekrownum),0) as nb__sem_top, views2 as lastweek, ifnull(classement_semaine_derniere,0), classement_semaine, ifnull(ce_classement_semaine_derniere2,0), clip_id, max(ce_classement_semaine) as pire_position, max(classement_semaine) as ma_pire_position, min(ce_classement_semaine) as mailleure_position, min(classement_semaine) as ma_mailleure_position FROM (SELECT v.id as myid,v.clip_id as myclipid, v.created_at as created_at, strftime('%W', v.created_at) AS week_number, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v.created_at) ORDER BY sum(case when v.id is not null then 1 else 0 end) DESC) AS classement_semaine, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v.created_at) ORDER BY count(v.id) DESC) AS ce_classement_semaine, (case when strftime('%W',v.created_at) = '52' and strftime('%W','now') = '1' or strftime('%W','now') = cast((cast(strftime('%W',v.created_at) as integer) + 1) as string) then ('semderniere') else 'pas de classement' end) as position_la_semaine_derniere, sum(case when v.id is not null then 1 else 0 end) AS views, clip_id, (case when strftime('%W', created_at) = '52' and strftime('%W','now') = '1' or strftime('%W','now') = cast(cast(strftime('%W', created_at) as integer) + 1 as string) and count(v.id) > 0 then count(v.id) else 'pas la semaine derniere' end) as classement_semaine_derniere,(select cat_id from clips ah where ah.id = v.clip_id limit 1) catid1,(select image from clips gm where gm.id = v.clip_id limit 1) image,(select title from clips gl where gl.id = v.clip_id limit 1) title FROM views v group by week_number, clip_id ) t1 left join (SELECT v1.id as myid2,v1.clip_id as myclipid2,v1.clip_id as clip_id2, v1.created_at as created_at2, strftime('%W', v1.created_at) AS week_number3, (select cat_id from clips az where az.id = v1.clip_id limit 1) as catid3,ROW_NUMBER() OVER(PARTITION BY strftime('%W', v1.created_at) ORDER BY count(v1.id) DESC) AS ce_classement_cette_semaine, strftime('%W',v1.created_at) as weektop, count(strftime('%W',v1.created_at)) as myweektop, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v1.created_at) order by cast(strftime('%W',v1.created_at) as integer)) as myweekrownum,(select region from clips hj where hj.id = v1.clip_id limit 1) regionid3, sum(case when v1.id is not null then 1 else 0 end) AS views3, clip_id as clip_id3 FROM views v1 GROUP BY clip_id3,week_number3 ) t3 on t3.clip_id3 = t1.clip_id and t3.regionid3 = #{id} and t3.ce_classement_cette_semaine < 16 left join (SELECT v1.id as myid2,v1.clip_id as myclipid2,v1.clip_id as clip_id2, v1.created_at as created_at2, strftime('%W', v1.created_at) AS week_number2, ROW_NUMBER() OVER(PARTITION BY strftime('%W', v1.created_at) ORDER BY count(v1.id) DESC) AS ce_classement_semaine_derniere2, (select count(a.id) as mycount from views a where strftime('%W',a.created_at) = strftime('%W',v1.created_at) and a.clip_id = v1.clip_id) as nbvuessemaineder, sum(case when v1.id is not null then 1 else 0 end) AS views2, clip_id as clip_ip2,(select cat_id from clips vu where vu.id = v1.clip_id) catid2  FROM views v1 GROUP BY clip_id2,week_number2 ) t2 on t2.catid2 = #{id} and t2.clip_id2 = t1.clip_id and ((t2.week_number2 = '52' and strftime('%W','now') = '1') or strftime('%W','now') = cast(cast(t2.week_number2 as integer) + 1 as string)) GROUP BY clip_id having catid1 = #{id} ORDER BY clip_id ;""")
  end
end
